{"ast":null,"code":"// src/services/api.js\nimport axios from \"axios\";\nconst API_URL = \"http://localhost:3000/api\";\nexport const fetchEvents = async data => {\n  const {\n    isArchived,\n    page,\n    pageSize\n  } = data;\n  try {\n    const response = await axios.get(`${API_URL}/events${data}`);\n    return response.data;\n  } catch (error) {\n    console.error(\"Etkinlikler alınamadı:\", error);\n    throw error;\n  }\n};\nexport const fetchEventById = async id => {\n  try {\n    const response = await axios.get(`${API_URL}/events/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error(\"Etkinlik alınamadı:\", error);\n    throw error;\n  }\n};\nexport async function fetchCities() {\n  try {\n    const response = await axios.get(`${API_URL}/cities`);\n    return response.data; // API'den gelen şehir verilerini döndür\n  } catch (error) {\n    throw new Error(\"Şehirler alınamadı: \" + error.message);\n  }\n}","map":{"version":3,"names":["axios","API_URL","fetchEvents","data","isArchived","page","pageSize","response","get","error","console","fetchEventById","id","fetchCities","Error","message"],"sources":["/Users/huseyinemreuslu/Desktop/activity-project/event-app/src/services/api.js"],"sourcesContent":["// src/services/api.js\nimport axios from \"axios\";\n\nconst API_URL = \"http://localhost:3000/api\";\n\nexport const fetchEvents = async (data) => {\n  const { isArchived, page, pageSize } = data;\n  try {\n    const response = await axios.get(`${API_URL}/events${data}`);\n    return response.data;\n  } catch (error) {\n    console.error(\"Etkinlikler alınamadı:\", error);\n    throw error;\n  }\n};\n\nexport const fetchEventById = async (id) => {\n  try {\n    const response = await axios.get(`${API_URL}/events/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error(\"Etkinlik alınamadı:\", error);\n    throw error;\n  }\n};\n\nexport async function fetchCities() {\n  try {\n    const response = await axios.get(`${API_URL}/cities`);\n    return response.data; // API'den gelen şehir verilerini döndür\n  } catch (error) {\n    throw new Error(\"Şehirler alınamadı: \" + error.message);\n  }\n}\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,2BAA2B;AAE3C,OAAO,MAAMC,WAAW,GAAG,MAAOC,IAAI,IAAK;EACzC,MAAM;IAAEC,UAAU;IAAEC,IAAI;IAAEC;EAAS,CAAC,GAAGH,IAAI;EAC3C,IAAI;IACF,MAAMI,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAAE,GAAEP,OAAQ,UAASE,IAAK,EAAC,CAAC;IAC5D,OAAOI,QAAQ,CAACJ,IAAI;EACtB,CAAC,CAAC,OAAOM,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAC9C,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAME,cAAc,GAAG,MAAOC,EAAE,IAAK;EAC1C,IAAI;IACF,MAAML,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAAE,GAAEP,OAAQ,WAAUW,EAAG,EAAC,CAAC;IAC3D,OAAOL,QAAQ,CAACJ,IAAI;EACtB,CAAC,CAAC,OAAOM,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC3C,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,eAAeI,WAAWA,CAAA,EAAG;EAClC,IAAI;IACF,MAAMN,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAAE,GAAEP,OAAQ,SAAQ,CAAC;IACrD,OAAOM,QAAQ,CAACJ,IAAI,CAAC,CAAC;EACxB,CAAC,CAAC,OAAOM,KAAK,EAAE;IACd,MAAM,IAAIK,KAAK,CAAC,sBAAsB,GAAGL,KAAK,CAACM,OAAO,CAAC;EACzD;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}